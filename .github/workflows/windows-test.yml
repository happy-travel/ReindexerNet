name: win-x64, win-x86 Test

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**.csproj'
      - 'src/**.cs'
      - 'src/**.dll'
      - '.github/workflows/windows-test.yml'

jobs:
  windows-test:
    runs-on: windows-2022
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    strategy:
      matrix:
        runtime: [ 'win-x64', 'win-x86' ]
    steps:
    - uses: actions/checkout@v2
    - name: Caching
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-${{ hashFiles('**/*.csproj') }} #hash of project files
        restore-keys: |
          ${{ runner.os }}-
    - name: Setup .NET Sdk
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
            3.1.x
            5.x
            6.x
            7.x
    #- name: Clean 3.1 #https://github.com/actions/virtual-environments/issues/1090
    #  run: dotnet clean -f netcoreapp3.1 --runtime ${{ matrix.runtime }} && dotnet nuget locals all --clear
    - name: Test .NET 7 ${{ matrix.runtime }}
      run: dotnet test -v quiet -f net7.0 --logger "console;verbosity=detailed" --runtime ${{ matrix.runtime }}
    - name: Test .NET 6 ${{ matrix.runtime }}
      run: dotnet test -v quiet -f net6.0 --logger "console;verbosity=detailed" --runtime ${{ matrix.runtime }}
    - name: Test .NET 5 ${{ matrix.runtime }}
      if: ${{ matrix.runtime != 'win-x86' }} #https://github.com/actions/setup-dotnet/issues/72
      run: dotnet test -v quiet -f net5.0 --logger "console;verbosity=detailed" --runtime ${{ matrix.runtime }}      
    - name: Test .NET Core 3.1 ${{ matrix.runtime }}
      run: dotnet test -v quiet -f netcoreapp3.1 --logger "console;verbosity=detailed" --runtime ${{ matrix.runtime }}